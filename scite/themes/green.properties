################################################################################
# Green SciTE color theme
#
#   Author: Corelian (https://www.allegro.cc/)
#   Source: https://www.allegro.cc/forums/thread/544528/544528
#
#   History/Modifications:
#      * 2014-05-21, Stefan Partheymüller: Added color styles for output pane
#      * 2014-05-26, Stefan Partheymüller: Changed color style for colour.embedded.js
#      * 2014-06-03, Stefan Partheymüller: Changed color style for numbers
#      * 2014-06-03, Stefan Partheymüller: Changed color style for HTML and XML
#      * 2014-08-24, Stefan Partheymüller: Added color style for Python
#      * 2014-10-07, Stefan Partheymüller: Added color style for PHP/JavaScript
#      * 2014-11-20, Stefan Partheymüller: Added color style for Ruby
#      * 2022-08-08, Stefan Partheymüller: Set selection.layer to enable transparent selection background
#
################################################################################

# Misc colours
fold.margin.colour=#3A6060
fold.margin.highlight.colour=#3A6060
caret.fore=#FFFFFF
selection.back=#607060
whitespace.fore=#508050
# Additional caret and selection settings
selection.alpha=160
selection.layer=0
caret.line.back=#E8E8FF
caret.line.back.alpha=50


# Give symbolic names to the set of colours used in the standard styles.
colour.code.comment.box=fore:#80A0A0
colour.code.comment.line=fore:#A0C0C0
colour.code.comment.doc=fore:#A0C0C0
colour.text.comment=fore:#0000FF,back:#D0F0D0
colour.other.comment=fore:#A0C0C0
colour.embedded.comment=back:#E0EEFF
colour.embedded.js=back:#406767
colour.embedded.php=back:#40675E
colour.notused=back:#FF0000
colour.number=fore:#FF7788
colour.keyword=fore:#00A0C0
colour.keyword2=fore:#B99C4C
colour.keyword3=fore:#007F7F
colour.keyword4=fore:#D0D000
colour.keyword5=fore:#A060A0
colour.keyword6=fore:#A060FF
colour.string=fore:#FF7788
colour.char=fore:#FF7788
colour.operator=fore:#F0E0B0
colour.preproc=fore:#D0D000
colour.error=fore:#FFFF00,back:#A05050


# Global default styles for all languages
# Default
style.*.32=$(font.base),back:#305050,fore:#CCBB77
# Line number
style.*.33=$(font.base),back:#305050
# Brace highlight
style.*.34=fore:#FF6030,bold
# Brace incomplete highlight
style.*.35=fore:#FF0000,bold
# Control characters
style.*.36=
# Indentation guides
style.*.37=fore:#507050


# C++ styles
# Default
style.cpp.32=$(font.base)
# White space
style.cpp.0=fore:#808080
# Comment
style.cpp.1=$(colour.code.comment.box),$(font.code.comment.box),italics
# Line Comment
style.cpp.2=$(colour.code.comment.line),$(font.code.comment.line),italics
# Doc comment
style.cpp.3=$(colour.code.comment.doc),$(font.code.comment.doc),italics
# Number
style.cpp.4=$(colour.number)
# Keyword
style.cpp.5=$(colour.keyword),bold
# Double quoted string
style.cpp.6=$(colour.string)
# Single quoted string
style.cpp.7=$(colour.char)
# UUIDs (only in IDL)
style.cpp.8=fore:#7F7F00
# Preprocessor
style.cpp.9=$(colour.preproc)
# Operators
style.cpp.10=$(colour.operator)
# Identifiers
style.cpp.11=
# End of line where string is not closed
style.cpp.12=$(colour.string),back:#5A5050,eolfilled
# Verbatim strings for C#
style.cpp.13=$(colour.string),back:#5A5050,eolfilled
# Regular expressions for JavaScript
style.cpp.14=$(colour.string),back:#5A5050,eolfilled
# Doc Comment Line
style.cpp.15=$(colour.code.comment.doc),$(font.code.comment.doc)
# Keywords2
style.cpp.16=$(colour.keyword2)
# Comment keyword
style.cpp.17=fore:#3060A0,$(font.code.comment.doc)
# Comment keyword error
style.cpp.18=fore:#804020,$(font.code.comment.doc)
# Braces are only matched in operator style
braces.cpp.style=10


# Conf styles
# Default
style.conf.32=$(font.base)
# whitespace (SCE_CONF_DEFAULT)
style.conf.0=$(font.base)
# Comment (SCE_CONF_COMMENT)
style.conf.1=$(colour.code.comment.box),$(font.comment),italics
# Number (SCE_CONF_NUMBER)
style.conf.2=$(colour.number)
# identifier (SCE_CONF_IDENTIFIER)
style.conf.9=$(colour.preproc)
# Double quoted string (SCE_CONF_STRING)
style.conf.6=$(colour.string)
# Operators (SCE_CONF_OPERATOR)
style.conf.7=$(colour.operator)
# IP address (SCE_CONF_IP)
style.conf.8=$(font.base)


# Properties styles
# Default
style.props.0=$(font.base)
# Comment
style.props.1=$(colour.code.comment.box),$(font.comment),italics
# Section
style.props.2=$(colour.preproc),back:#494949,eolfilled
# Assignment operator
style.props.3=$(colour.keyword2)
# Default value (@)
style.props.4=$(colour.preproc)
# Matched Operators
style.props.34=fore:#FF6030,bold
style.props.35=fore:#FF0000,bold


# Makefile styles
# Default
style.makefile.0=$(font.base)
# Comment: #
style.makefile.1=$(colour.code.comment.box),$(font.comment),italics
comment.block.makefile=#~
# Pre-processor or other comment: !
style.makefile.2=$(colour.preproc)
# Variable: $(x)
style.makefile.3=fore:#9F9F20
# Operator
style.makefile.4=$(colour.operator)
# Target
style.makefile.5=$(colour.preproc)
# Error
style.makefile.9=$(colour.error),eolfilled
# Matched Operators
style.makefile.34=fore:#FF6030,bold
style.makefile.35=fore:#FF0000,bold


# Lua styles
#Default
style.lua.32=$(font.base)
# White space: Visible only in View Whitespace mode (or if it has a back colour)
style.lua.0=fore:#808080
# Block comment (Lua 5.0)
style.lua.1=$(colour.code.comment.box),$(font.code.comment.box),back:#305950,eolfilled,italics
# Line comment
style.lua.2=$(colour.code.comment.line),$(font.code.comment.line),italics
# Doc comment -- Not used in Lua (yet?)
style.lua.3=$(colour.notused),$(font.notused)
# Number
style.lua.4=$(colour.number)
# Keyword
style.lua.5=$(colour.keyword)
# (Double quoted) String
style.lua.6=$(colour.string)
# Character (Single quoted string)
style.lua.7=$(colour.char)
# Literal string
style.lua.8=$(colour.string),$(font.code.comment.box),back:#E0FFFF
# Preprocessor (obsolete in Lua 4.0 and up)
style.lua.9=$(colour.preproc)
# Operators
style.lua.10=$(colour.operator)
# Identifier (everything else...)
style.lua.11=$(font.base)
# End of line where string is not closed
style.lua.12=$(colour.string),back:#5A5050,eolfilled
# Other keywords
style.lua.13=$(style.lua.5)
style.lua.14=$(style.lua.5)
style.lua.15=$(style.lua.5)
style.lua.16=$(style.lua.5)
style.lua.17=$(style.lua.5)
style.lua.18=$(style.lua.5)
style.lua.19=$(style.lua.5)
# Braces are only matched in operator style
braces.lua.style=10


# Batch styles
# Default
style.batch.0=$(font.base)
# Comment (rem or ::)
style.batch.1=$(colour.code.comment.box),$(font.comment),italics
# Keywords
style.batch.2=$(colour.keyword),bold
# Label (line beginning with ':')
style.batch.3=$(colour.preproc),back:#494949,eolfilled
# Hide command character ('@')
style.batch.4=$(colour.preproc)
# External commands
style.batch.5=fore:#007090,$(font.monospace),bold
# Variable: %%x (x is almost whatever, except space and %), %n (n in [0-9]), %EnvironmentVar%
style.batch.6=$(font.base)
# Operator: * ? < > |
style.batch.7=$(colour.operator)


# Bash styles
# Default
style.bash.32=$(font.base)
# White space
style.bash.0=fore:#808080,$(font.base)
# Error
style.bash.1=$(colour.error)
# Comment
style.bash.2=$(colour.code.comment.box),$(font.comment),italics
# Number
style.bash.3=$(colour.number)
# Keyword
style.bash.4=$(colour.keyword),bold
# Double quoted string
style.bash.5=$(colour.string),$(font.monospace)
# Single quoted string
style.bash.6=$(colour.char),$(font.monospace)
# Operators
style.bash.7=$(colour.operator),bold
# Identifiers (functions, etc.)
style.bash.8=$(font.base)
# Scalars: $var
style.bash.9=fore:#000000,back:#FFE0E0
# Parameter expansion: ${var}
style.bash.10=fore:#000000,back:#FFFFE0
# Back Ticks
style.bash.11=fore:#FFFF00,back:#A08080
# Here-doc (delimiter)
style.bash.12=fore:#000000,back:#DDD0DD
# Here-doc (single quoted, q)
style.bash.13=fore:#7F007F,back:#DDD0DD,eolfilled,notbold
# Braces are only matched in operator style
braces.bash.style=7


# Error list styles (Output pane)
# Default
style.errorlist.0=back:#305050,fore:#CCBB77
# command or return status
style.errorlist.4=fore:#$(colour.keyword),bold


# HTML styles
# Text
style.hypertext.0=$(font.base)
# Tags
style.hypertext.1=$(colour.keyword),bold
# Unknown Tags
style.hypertext.2=fore:#FF0000
# Attributes
style.hypertext.3=$(colour.keyword2)
# Unknown Attributes
style.hypertext.4=fore:#FF0000
# Numbers
style.hypertext.5=$(colour.number)
# Double quoted strings
style.hypertext.6=$(colour.string)
# Single quoted strings
style.hypertext.7=$(colour.string)
# Other inside tag
style.hypertext.8=$(colour.operator)
# Comment
style.hypertext.9=$(colour.code.comment.box)
# Entities
style.hypertext.10=$(font.base)
# SGML tags <! ... >
style.hypertext.21=fore:#000080,$(colour.embedded.js),bold
# SGML command
style.hypertext.22=fore:#000080,$(colour.embedded.js),bold
# SGML 1st param
style.hypertext.23=$(colour.embedded.js)
# Embedded PHP background
colour.hypertext.server.php.back=$(colour.embedded.php)


# CSS
# CSS1 Property
style.css.6=$(colour.keyword2)
# CSS2 Property
style.css.15=$(colour.keyword2)
# Pseudo class (HtmlTag:pseudoClass)
style.css.3=fore:#800000,italics


# PHP
# Default
style.hypertext.118=$(font.base),$(colour.hypertext.server.php.back),eolfilled
# Double quoted String
style.hypertext.119=$(colour.string),$(colour.hypertext.server.php.back)
# Single quoted string
style.hypertext.120=$(colour.char),$(colour.hypertext.server.php.back)
# Keyword
style.hypertext.121=$(colour.keyword),bold,$(colour.hypertext.server.php.back)
# Number
style.hypertext.122=$(colour.number),$(colour.hypertext.server.php.back)
# Variable
style.hypertext.123=$(colour.keyword2),italics,$(colour.hypertext.server.php.back)
# Comment
style.hypertext.124=$(colour.code.comment.box),$(font.comment),$(colour.hypertext.server.php.back),eolfilled
# One line comment
style.hypertext.125=$(colour.code.comment.line),italics,$(font.comment),$(colour.hypertext.server.php.back)
# PHP variable in double quoted string
style.hypertext.126=$(colour.string),italics,$(colour.hypertext.server.php.back)
# PHP operator
style.hypertext.127=$(colour.operator),$(colour.hypertext.server.php.back)


# Ruby
# Comment line
style.ruby.2=$(colour.code.comment.line),$(font.comment)
# POD
style.ruby.3=$(colour.code.comment.box)
# Number
style.ruby.4=$(colour.number)
# Word
style.ruby.5=$(colour.keyword),bold
# String
style.ruby.6=$(colour.string)
# Character
style.ruby.7=$(colour.char)
# Class name
style.ruby.8=$(colour.keyword4),bold
# Def name
style.ruby.9=$(colour.keyword3),bold
# Operator
style.ruby.10=$(colour.operator),bold
# Global
style.ruby.13=$(colour.keyword6)
# Symbol
#~ style.ruby.14=fore:#C0A030
# MODULE_NAME
style.ruby.15=$(colour.keyword5),bold
# INSTANCE_VAR
style.ruby.16=$(colour.keyword2)
# CLASS_VAR
style.ruby.17=$(colour.keyword2),italics


# XML styles
# Default
style.xml.0=$(font.base)
# Tags
style.xml.1=$(colour.keyword),bold
# Unknown Tags
style.xml.2=fore:#FF0000
# Attributes
style.xml.3=$(colour.keyword2)
# Unknown Attributes
style.xml.4=fore:#FF0000
# Numbers
style.xml.5=$(colour.number)
# Double quoted strings
style.xml.6=$(colour.string)
# Single quoted strings
style.xml.7=$(colour.string)
# Other inside tag
style.xml.8=$(colour.operator)
# Comment
style.xml.9=$(colour.code.comment.box)
# Entities
style.xml
# XML style tag ends '/>'
style.xml.11=$(colour.keyword)
# XML identifier start '<?'
style.xml.12=$(colour.keyword),bold
# XML identifier end '?>'
style.xml.13=$(colour.keyword),bold


# Python styles
# White space
style.python.0=$(whitespace.fore)
# Comment
style.python.1=$(colour.code.comment.line)
# Number
style.python.2=$(colour.number)
# String
style.python.3=$(colour.string)
# Single quoted string
style.python.4=$(colour.string)
# Keyword
style.python.5=$(colour.keyword),bold
# Triple quotes
style.python.6=$(colour.code.comment.box)
# Triple double quotes
style.python.7=$(colour.code.comment.box)
# Class name definition
style.python.8=$(colour.preproc),bold
# Function or method name definition
style.python.9=fore:#007F7F,bold
# Operators
style.python.10=$(colour.operator)
# Identifiers (use default)
#~ style.python.11=
# Comment-blocks
style.python.12=$(colour.code.comment.box)
# End of line where string is not closed
style.python.13=$(colour.string),back:#5A5050,eolfilled
# Highlighted identifiers (use default)
#~ style.python.14=fore:#407090
# Decorators (use default)
#~ style.python.15=fore:#805000
# Matched Operators
style.python.34=fore:#FF6030,bold
style.python.35=fore:#FF0000,bold
# Braces are only matched in operator style
braces.python.style=10
