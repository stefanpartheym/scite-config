################################################################################
# SciTE user configuration file
#
# This is supposed to work on GNU/Linux (GTK+) as well as on Windows systems
################################################################################

#-------------------------------------------------------------------------------
# general paths
custom.scite.subuserhome=$(SciteUserHome)/.scite
custom.scite.apifilesdir=$(custom.scite.subuserhome)/api
custom.scite.extdir=$(custom.scite.subuserhome)/ext
custom.scite.abbrevdir=$(custom.scite.subuserhome)/abbrev
custom.scite.lexerdir=$(custom.scite.subuserhome)/lex

#-------------------------------------------------------------------------------
# general UI
pathbar.visible=1
horizontal.scrollbar=0
toolbar.visible=1
toolbar.usestockicons=1
statusbar.visible=1

#-------------------------------------------------------------------------------
# general behaviour
load.on.activate=1
check.if.already.open=1

#-------------------------------------------------------------------------------
# general settings
code.page=65001

#-------------------------------------------------------------------------------
# exit and startup behaviour
save.session=1
session.bookmarks=1
session.folds=1
save.recent=1
save.position=1
save.find=1

#-------------------------------------------------------------------------------
# editor-UI and behaviour
line.margin.visible=1

caret.additional.blinks=0
caret.line.back=#E8E8FF

edge.column=80
edge.mode=1
edge.colour=#C0DCC0

virtual.space=1
rectangular.selection.modifier=4

highlight.current.word=1
highlight.current.word.colour=#64FF00
indicators.alpha=93
indicators.under=1

tabsize=2
use.tabs=0
indent.size=2
indent.maintain.*=1
eol.mode=LF

strip.trailing.spaces.*=1

#-------------------------------------------------------------------------------
# line-wrapping
wrap=1
wrap.style=2
wrap.visual.flags=3
cache.layout=3

#-------------------------------------------------------------------------------
# fonts

# always use monospace fonts
# the Hack font is required on both GNU/Linux and Windows platforms!
# get the Hack font from https://sourcefoundry.org/hack/
font.mono=font:Hack
font.base=$(font.mono),size:11
font.text=$(font.mono),size:11
font.small=$(font.mono),size:8
font.comment=$(font.mono),size:11
font.code.comment.box=$(font.comment)
font.code.comment.line=$(font.comment)
font.code.comment.doc=$(font.comment)
font.code.comment.nested=$(font.comment)
font.monospace=$(font.mono),size:11

#-------------------------------------------------------------------------------
# autocompletion and calltips settings
autocomplete.*.start.characters=._$(chars.alpha)
autocomplete.*.word.characters=._$(chars.alpha)

calltip.*.word.characters=._$(chars.alpha)

#-------------------------------------------------------------------------------
# language api support

# basic C api-files
custom.api.c=\
$(custom.scite.apifilesdir)/c_std.api;\
$(custom.scite.apifilesdir)/c_opengl.api;\
$(custom.scite.apifilesdir)/c_sdl.api
if PLAT_WIN
    custom.api.c=$custom.api.c;$(custom.scite.apifilesdir)/c_wnds.api

# C/C++ api support
api.*.c=$(custom.api.c)
api.*.cc=$(api.*.c)
api.*.cxx=$(api.*.c)
api.*.cpp=$(api.*.c)
api.*.c++=$(api.*.c)
api.*.h=$(custom.api.c)
api.*.hh=$(api.*.h)
api.*.hpp=$(api.*.h)
api.*.hxx=$(api.*.h)
api.*.h++=$(api.*.h)
# basic Pascal/Delphi api-files
custom.api.pascal=$(custom.scite.apifilesdir)/pascal_std.api
# Pascal/Delphi api support
api.*.pas=$(custom.api.pascal)
api.*.inc=$(api.*.pas)
api.*.dpr=$(api.*.pas)
# CMake api support
api.*.cmake=$(custom.scite.apifilesdir)/cmake.api
# Java api support
api.*.java=$(custom.scite.apifilesdir)/java_std.api
# Lua api support
api.*.lua=$(custom.scite.apifilesdir)/lua_scite.api
# Perl api support
api.*.pl=$(custom.scite.apifilesdir)/perl_std.api
# PHP api support
api.*.php=$(custom.scite.apifilesdir)/php_std.api
# Codeblock api support
api.*.dwp=$(custom.scite.apifilesdir)/codeblock_std.api

#-------------------------------------------------------------------------------
# language specific settings

# Codeblock
import .scite/lex/codeblock
custom.lexer.codeblock=$(custom.scite.lexerdir)/codeblock.lexer.lua
abbreviations.$(file.patterns.codeblock)=$(custom.scite.abbrevdir)/codeblock.abbrev

# C / C++
command.name.1.$(file.patterns.cpp)=Swap C Header / Source
command.1.$(file.patterns.cpp)=dofile $(custom.scite.extdir)/commands/swap_header.command.lua
command.subsystem.1.$(file.patterns.cpp)=3
command.mode.1.$(file.patterns.cpp)=savebefore:no
command.shortcut.1.$(file.patterns.cpp)=F4
abbreviations.$(file.patterns.cpp)=$(custom.scite.abbrevdir)/cpp.abbrev

# Delphi/Pascal
indent.size.$(file.patterns.pascal.all)=3

# BATCH
comment.block.batch=:: ~

# Makefile
# tab-character must be enabled in makefiles
use.tabs.$(file.patterns.make)=1

# Lua
# bold keywords
style.lua.5=$(colour.keyword),bold
# execute lua file with builtin SciTE lua interpreter
command.name.1.$(file.patterns.lua)=Execute Lua Script
command.subsystem.1.$(file.patterns.lua)=3
command.1.$(file.patterns.lua)=dofile $(FilePath)

# CSS
use.tabs.*.css=0

# Ruby
indent.size.$(file.patterns.rb)=3

# XML/HTML
indent.size.$(file.patterns.xml)=2
indent.size.$(file.patterns.html)=2
comment.stream.start.xml=<!--
comment.stream.end.xml=-->


#-------------------------------------------------------------------------------
# windows only settings
open.dialog.in.file.directory=1

#-------------------------------------------------------------------------------
# lua extensions

# Lua startup script: comment the following line to disable lua extensions
ext.lua.startup.script=$(custom.scite.extdir)/startup.lua
# enable/disable additional debug messages in the output pane
custom.ext.debugmode=off

# enable custom lexers
custom.ext.loadlexers=on
custom.ext.lexers=$(custom.lexer.codeblock);

custom.ext.extensions.debugger=off
custom.ext.extensions.debugger.dir=debugger

#-------------------------------------------------------------------------------
# color themes
#~ import .scite/themes/dark
import .scite/themes/green
#~ import .scite/themes/white
